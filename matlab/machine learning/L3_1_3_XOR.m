%% 例3 异或问题-线性不可分函数
clear all; close all;
L = 2000;
N = 4;%变成4种可能
m = 3;%维数m=3
X = [[-1 1 -1 1]',[1 1 -1 1]'];
X = [1 0 1 0%输入
     0 1 1 0
     1 1 1 1];
D = [1 1 0 0];%期望（真实值）
% D = [0 0 1 1];

% 异或问题和反问题正好无法训练到收敛，原因：
% 在异或问题中
%（0，0）和（1，1）同类
%（1，0）和（0，1）同类
% 因为单层感知机相当于直线分类，无法在二维线性空间内将这两类分开。

% D = [0 0 0 0];%0 ok
% D = [0 0 0 1];%1 ok
% D = [0 0 1 0];%2 ok
% D = [0 0 1 1];%3 NO NO NO 异或问题
% D = [0 1 0 0];%4 ok
% D = [0 1 0 1];%5 ok
% D = [0 1 1 0];%6 ok
% D = [0 1 1 1];%7 ok
% D = [1 0 0 0];%8 ok
% D = [1 0 0 1];%0 ok
% D = [1 0 1 0];%10 ok
% D = [1 0 1 1];%11 ok
% D = [1 1 0 0];%12 NO NO NO 异或问题的反问题
% D = [1 1 0 1];%13 ok 
% D = [1 1 1 0];%14 ok
% D = [1 1 1 1];%15 ok

w = randn(m,1);%初始权值（随机）
mu = 10;%改变步长 本例适合大步长，因为不会发散

for kk = 1:L%训练
    for ii = 1:N
        x = X(:,ii);
        z = w' * x;
        fz = 1 /(1 + exp(-z));
        d = D(ii);
        e = d - fz;
        w = w + mu * e * fz * (1 - fz) * x;
    end
    Err(kk) = norm(e);
end
    
    
for ii = 1:N %未进行训练
    x = X(:,ii);
    z = w' * x;
    fz(ii) = 1 /(1 + exp(-z));
end

figure,plot(Err);
figure, hold on;
plot(D,'ro');plot(fz,'g*');
legend('REAL','TRAIN');
axis([0.9 4.1 -0.1 1.1]);

